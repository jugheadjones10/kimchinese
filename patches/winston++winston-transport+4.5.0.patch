diff --git a/node_modules/winston/node_modules/winston-transport/dist/index.js b/node_modules/winston/node_modules/winston-transport/dist/index.js
index fb2ff60..e57d88e 100644
--- a/node_modules/winston/node_modules/winston-transport/dist/index.js
+++ b/node_modules/winston/node_modules/winston-transport/dist/index.js
@@ -24,7 +24,10 @@ var TransportStream = module.exports = function TransportStream() {
 
   var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
 
-  Writable.call(this, { objectMode: true, highWaterMark: options.highWaterMark });
+  Writable.call(this, {
+    objectMode: true,
+    highWaterMark: options.highWaterMark
+  });
 
   this.format = options.format;
   this.level = options.level;
@@ -96,7 +99,11 @@ TransportStream.prototype._write = function _write(info, enc, callback) {
     // We trap(and re-throw) any errors generated by the user-provided format, but also
     // guarantee that the streams callback is invoked so that we can continue flowing.
     try {
-      transformed = this.format.transform(Object.assign({}, info), this.format.options);
+      console.log('Inside logger, before transformation by format', info);
+      transformed = this.format.transform(
+      // Object.assign({}, info),
+      info, this.format.options);
+      console.log('Inside logger, after transformation by format', transformed);
     } catch (err) {
       errState = err;
     }
diff --git a/node_modules/winston/node_modules/winston-transport/index.js b/node_modules/winston/node_modules/winston-transport/index.js
index 59e8421..82b7dab 100644
--- a/node_modules/winston/node_modules/winston-transport/index.js
+++ b/node_modules/winston/node_modules/winston-transport/index.js
@@ -15,8 +15,13 @@ const { LEVEL } = require('triple-beam');
  * creation
  * @param {Function} options.close - Called on "unpipe" from parent.
  */
-const TransportStream = module.exports = function TransportStream(options = {}) {
-  Writable.call(this, { objectMode: true, highWaterMark: options.highWaterMark });
+const TransportStream = (module.exports = function TransportStream(
+  options = {}
+) {
+  Writable.call(this, {
+    objectMode: true,
+    highWaterMark: options.highWaterMark
+  });
 
   this.format = options.format;
   this.level = options.level;
@@ -29,7 +34,7 @@ const TransportStream = module.exports = function TransportStream(options = {})
   if (options.close) this.close = options.close;
 
   // Get the levels from the source we are piped from.
-  this.once('pipe', logger => {
+  this.once('pipe', (logger) => {
     // Remark (indexzero): this bookkeeping can only support multiple
     // Logger parents with the same `levels`. This comes into play in
     // the `winston.Container` code in which `container.add` takes
@@ -39,7 +44,7 @@ const TransportStream = module.exports = function TransportStream(options = {})
   });
 
   // If and/or when the transport is removed from this instance
-  this.once('unpipe', src => {
+  this.once('unpipe', (src) => {
     // Remark (indexzero): this bookkeeping can only support multiple
     // Logger parents with the same `levels`. This comes into play in
     // the `winston.Container` code in which `container.add` takes
@@ -51,7 +56,7 @@ const TransportStream = module.exports = function TransportStream(options = {})
       }
     }
   });
-};
+});
 
 /*
  * Inherit from Writeable using Node.js built-ins
@@ -88,7 +93,13 @@ TransportStream.prototype._write = function _write(info, enc, callback) {
     // We trap(and re-throw) any errors generated by the user-provided format, but also
     // guarantee that the streams callback is invoked so that we can continue flowing.
     try {
-      transformed = this.format.transform(Object.assign({}, info), this.format.options);
+      console.log('Inside logger, before transformation by format', info);
+      transformed = this.format.transform(
+        // Object.assign({}, info),
+        info,
+        this.format.options
+      );
+      console.log('Inside logger, after transformation by format', transformed);
     } catch (err) {
       errState = err;
     }
@@ -210,6 +221,5 @@ TransportStream.prototype._nop = function _nop() {
   return void undefined;
 };
 
-
 // Expose legacy stream
 module.exports.LegacyTransportStream = require('./legacy');
diff --git a/node_modules/winston/node_modules/winston-transport/package-lock.json b/node_modules/winston/node_modules/winston-transport/package-lock.json
new file mode 100644
index 0000000..a047c38
Binary files /dev/null and b/node_modules/winston/node_modules/winston-transport/package-lock.json differ
